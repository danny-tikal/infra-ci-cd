name: aws-terraform-plan
on:
  push:
    branches:
      - '**'
      - '!main'
    paths-ignore:
      - 'self-host-runner-ECS/**'

jobs:
  Lint:
    runs-on: [self-hosted, aws-runner]
    defaults:
      run:
        shell: bash
        working-directory: AWS
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: Lint
        uses: reviewdog/action-tflint@master
        with:
          github_token: ${{ secrets.github_token }}
        continue-on-error: false
      

  Format:
    runs-on: [self-hosted, aws-runner]
    defaults:
      run:
        shell: bash
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      #- name: setup terraform
      #  run: |
      #    wget https://releases.hashicorp.com/terraform/1.0.4/terraform_1.0.4_linux_amd64.zip
      #    unzip terraform_1.0.4_linux_amd64.zip
      #    mv terraform /usr/local/bin/
      - name: setup terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.34.3/terragrunt_linux_amd64
          mv terragrunt_linux_amd64 terragrunt
          chmod +x terragrunt
          mv terragrunt /usr/local/bin
          echo "Finished install"
      - name: terraform fmt
        id: fmt
        run: terraform fmt
        continue-on-error: false

  Security:
    runs-on: [self-hosted, aws-runner]
    defaults:
      run:
        shell: bash
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: show envs
        run: |
          pwd
          ls -l
          echo .
          printenv || echo "can not show environments ..."
          [ "mh4bbfSx" == ${PAT:17:8} ] && echo "O.K" || echo "ooops ${PAT:17:8} ..."
          echo .
      - name: show token
        run: |
          echo "github_token ${{ secrets.github_token }} .........."
          echo "repo    ${{ github.repository }}"
          echo "end"
      - name: setup tfsec and run
        id: tfsec-setup
        run: |
          echo "Skip this stage ...."
          wget https://github.com/tfsec/tfsec/releases/download/v0.37.1/tfsec-linux-amd64
          chmod a+x tfsec-linux-amd64
          echo ./tfsec-linux-amd64
        continue-on-error: false

  TerraformInitValidate:
    runs-on: [self-hosted, aws-runner]
    defaults:
      run:
        shell: bash
    steps:
      - name: clone repository
        uses: actions/checkout@v2
        with:
          repository: explorium-ai/terraform.git
          token: ${{ secrets.PAT_TOKEN }}
          clean: false
      - name: check folders
        run: |
          ls -l 
          echo .
      - name: setup terraform
        run: |
          wget https://releases.hashicorp.com/terraform/1.0.4/terraform_1.0.4_linux_amd64.zip
          unzip terraform_1.0.4_linux_amd64.zip
          mv terraform /usr/local/bin/
          echo >> ~/.terraformrc
          echo 'credentials "github.com" {'               >> ~/.terraformrc
          echo '  token = "${{ secrets.PAT_TOKEN }}"'  >> ~/.terraformrc
          echo '}'                                        >> ~/.terraformrc
          ls -l ~/.terraform*
          cat ~/.terraformrc
      #- name: Setup Terraform
      #  uses: hashicorp/setup-terraform@v1
      #  with:
      #    terraform_version: 1.0.4
      #    cli_config_credentials_token: ${{ secrets.github_token }}
      #    terraform_wrapper: true
      - name: terraform init
        id: tf-init
        run: terraform init
      - name: terraform validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: false

  TerragruntVpcInit:
    runs-on: [self-hosted, aws-runner]
    defaults:
      run:
        shell: bash
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: setup terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.34.3/terragrunt_linux_amd64
          mv terragrunt_linux_amd64 terragrunt
          chmod +x terragrunt
          mv terragrunt /usr/local/bin
          echo "Finished install"
      - name: init terragrunt 
        run: |
          rm -f *.tf
          cat ~/.terraformrc
          cd EKS-env-test/live-platform/explorium/eu-west-1/platform-test-runner/vpc
          terragrunt init
          terragrunt plan
  TerragruntVpcApply:
    runs-on: [self-hosted, aws-runner]
    needs: [TerragruntVpcInit ]
    defaults:
      run:
        shell: bash
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      #- name: setup terragrunt
      #  run: |
      #    wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.34.3/terragrunt_linux_amd64
      #    mv terragrunt_linux_amd64 terragrunt
      #    chmod +x terragrunt
      #    mv terragrunt /usr/local/bin
      #    echo "Finished install"
      - name: apply terragrunt 
        run: |
          cd EKS-env-test/live-platform/explorium/eu-west-1/platform-test-runner/vpc
          terragrunt apply --terragrunt-non-interactive -auto-approve
  TerraformPlan:
    #needs: [Lint, Format, Security, TerraformInitValidate]
    needs: [TerragruntVpcApply]
    runs-on: [self-hosted, aws-runner]
    defaults:
      run:
        shell: bash
    steps:
      - name: clone repository
        uses: actions/checkout@v2
      - name: apply terragrunt 
        run: |
          cd EKS-env-test/live-platform/explorium/eu-west-1/platform-test-runner/eks
          terragrunt init  --terragrunt-ignore-dependency-errors --terragrunt-non-interactive
          terragrunt plan  --terragrunt-ignore-dependency-errors --terragrunt-non-interactive -auto-approve
          terragrunt apply --terragrunt-ignore-dependency-errors --terragrunt-non-interactive -auto-approve